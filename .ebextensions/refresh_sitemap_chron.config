files:
    "/etc/cron.d/mycron":
        mode: "000644"
        owner: root
        group: root
        content: |
            */5 * * * * root /usr/local/bin/myscript.sh

    "/usr/local/bin/myscript.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/bin/bash
            # Using similar syntax as the appdeploy pre hooks that is managed by AWS
            . /opt/elasticbeanstalk/support/envvars

            # Loading environment data
            EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
            EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)
            EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config container -k app_user)
            EB_APP_CURRENT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)
            EB_APP_PIDS_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_pid_dir)

            # Setting up correct environment and ruby version so that bundle can load all gems
            . $EB_SUPPORT_DIR/envvars
            . $EB_SCRIPT_DIR/use-app-ruby.sh

            # Script for reactivating sitemap
            cd /var/app/current/public
            cronlog="/var/app/current/cronlog.txt"
            sudo touch cronlog
            sudo echo "Starting cron script" >> cronlog
            count=$(ls | grep sitemap | wc -l)
            if [ $count == 0 ]
            then
                sudo echo "refreshing sitemaps" >> cronlog
                cd ..
                sudo chmod 777 public
                rake sitemap:refresh
                sudo echo "finished rake" >> cronlog
            fi

            exit 0

commands:
    remove_old_cron:
        command: "rm -f /etc/cron.d/*.bak && rm -f /usr/local/bin/*.sh"
